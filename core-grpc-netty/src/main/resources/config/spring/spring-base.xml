<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<util:properties id="properties"
		location="classpath:config/props/*.properties" />
	<context:property-placeholder
		local-override="true" properties-ref="properties" />

	<context:component-scan base-package="com.jw.test.*" />
	<context:annotation-config />

	<bean id="characterEncoding" class="org.springframework.web.filter.CharacterEncodingFilter">
		<property name="encoding" value="UTF-8" />
		<property name="forceEncoding" value="true" />
	</bean>

	<!-- <bean id="serializerFactory" class="shj.teach.core.rpc.hessian.HiberbateSerializerFactory" 
		/> -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"> 
		<property name="basenames"> <array value-type="java.lang.String"> <value>resource.string.messages</value> 
		</array> </property> </bean> -->

	<bean id="tcpServer" class="io.adam.server.netty.NettyTCPServer"
		destroy-method="stopServer">
		<constructor-arg ref="tcpConfig" />
		<constructor-arg ref="myChannelInitializer" />
	</bean>

	<bean id="myChannelInitializer" class="io.adam.server.netty.MyChannelInitializer">

		<bean id="tcpConfig" class="io.nadron.server.netty.NettyConfig">
			<property name="channelOptions" ref="tcpChannelOptions" />
			<property name="bossGroup" ref="bossGroup" />
			<property name="workerGroup" ref="workerGroup" />
			<property name="portNumber" value="10086" />
		</bean>

		<util:map id="tcpChannelOptions" map-class="java.util.HashMap">
			<entry>
				<key>
					<util:constant static-field="io.netty.channel.ChannelOption.SO_KEEPALIVE" />
				</key>
				<value type="java.lang.Boolean">true</value>
			</entry>
			<entry>
				<key>
					<util:constant static-field="io.netty.channel.ChannelOption.SO_BACKLOG" />
				</key>
				<value type="java.lang.Integer">100</value>
			</entry>
		</util:map>

		<bean id="bossGroup" class="io.netty.channel.nio.NioEventLoopGroup"
			destroy-method="shutdownGracefully">
			<constructor-arg type="int" index="0" value="2" />
			<constructor-arg index="1" ref="bossThreadFactory" />
		</bean>

		<bean id="workerGroup" class="io.netty.channel.nio.NioEventLoopGroup"
			destroy-method="shutdownGracefully">
			<constructor-arg type="int" index="0" value="8" />
			<constructor-arg index="1" ref="workerThreadFactory" />
		</bean>

		<bean id="bossThreadFactory" class="io.adam.concurrent.NamedThreadFactory">
			<constructor-arg type="java.lang.String" value="Server-Boss" />
		</bean>

		<bean id="workerThreadFactory" class="io.adam.concurrent.NamedThreadFactory">
			<constructor-arg type="java.lang.String" index="0"
				value="Server-Worker" />
		</bean>
</beans>
